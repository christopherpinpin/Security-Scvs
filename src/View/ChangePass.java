/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import javax.swing.JOptionPane;

/**
 *
 * @author Gigabyte
 */
public class ChangePass extends javax.swing.JPanel {

    /**
     * Creates new form changePass
     */
    
    public Frame frame;
    
    public ChangePass() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        usernameFld = new javax.swing.JTextField();
        passwordFld = new javax.swing.JPasswordField();
        confpassFld = new javax.swing.JPasswordField();
        changePassBtn = new javax.swing.JButton();
        errorMsg1 = new javax.swing.JLabel();
        errorMsg2 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SECURITY Svcs");
        jLabel1.setToolTipText("");

        usernameFld.setEditable(false);
        usernameFld.setBackground(new java.awt.Color(240, 240, 240));
        usernameFld.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        usernameFld.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        usernameFld.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "USERNAME", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        usernameFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameFldKeyReleased(evt);
            }
        });

        passwordFld.setBackground(new java.awt.Color(240, 240, 240));
        passwordFld.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        passwordFld.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passwordFld.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "NEW PASSWORD", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        passwordFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordFldKeyReleased(evt);
            }
        });

        confpassFld.setBackground(new java.awt.Color(240, 240, 240));
        confpassFld.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        confpassFld.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        confpassFld.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "CONFIRM PASSWORD", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        confpassFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                confpassFldKeyReleased(evt);
            }
        });

        changePassBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        changePassBtn.setText("CHANGE PASSWORD");
        changePassBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        changePassBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePassBtnActionPerformed(evt);
            }
        });

        errorMsg1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        errorMsg1.setForeground(new java.awt.Color(255, 0, 0));
        errorMsg1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        errorMsg1.setToolTipText("");

        errorMsg2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        errorMsg2.setForeground(new java.awt.Color(255, 0, 0));
        errorMsg2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        errorMsg2.setToolTipText("");

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backBtn.setText("<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(backBtn)
                .addGap(102, 102, 102)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(confpassFld)
                    .addComponent(passwordFld)
                    .addComponent(usernameFld)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(errorMsg1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(errorMsg2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(changePassBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(193, 193, 193))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(backBtn)))
                .addGap(40, 40, 40)
                .addComponent(usernameFld, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(passwordFld, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(errorMsg1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(errorMsg2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confpassFld, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(changePassBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void passwordFldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFldKeyReleased
        String password = String.valueOf(passwordFld.getPassword());
        String puncs = ",./<>?;:'[]{}|-=_+!@#$%^&*()";
        int strength = 0;
        int uppercase = 0;
        int digit = 0;
        int punctuation = 0;
        
        for(int i=0 ; i < password.length() ; i++){
            if(Character.isDigit(password.charAt(i))){
                digit = 1;
            }
            if(Character.isUpperCase(password.charAt(i))){
                uppercase = 1;
            }
            if(puncs.contains("" + password.charAt(i))){
                punctuation = 1;
            }
        }
        strength = uppercase + digit + punctuation;
        if(password.length() < 8){
            errorMsg1.setText("Password must be atleast 8 characters.");
            errorMsg1.setForeground(new java.awt.Color(255, 0, 0));
        }
        else if(strength < 2){
            errorMsg1.setText("Password Strength: Weak");
            errorMsg1.setForeground(new java.awt.Color(255, 0, 0));
        }
        else if(strength == 2){
            errorMsg1.setText("Password Strength: Moderate");
            errorMsg1.setForeground(new java.awt.Color(201, 184, 28));
        }
        else if(strength > 2){
            errorMsg1.setText("Password Strength: Strong");
            errorMsg1.setForeground(new java.awt.Color(28, 184, 0));
        }
        else{
            errorMsg1.setText("");
            errorMsg1.setForeground(new java.awt.Color(255, 0, 0));
        }
    }//GEN-LAST:event_passwordFldKeyReleased

    private void changePassBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePassBtnActionPerformed
        boolean passMatch = false;
        boolean passValid = false;
        
        if(String.valueOf(passwordFld.getPassword()).equals(String.valueOf(confpassFld.getPassword()))){
            passMatch = true;
        }
        
        if(String.valueOf(passwordFld.getPassword()).length() > 7){
            passValid = true;
        }
        
        if(!passValid){
            JOptionPane.showMessageDialog(frame,
                    "Password must be atleast 8 characters.",
                     "Registration Error",
                 JOptionPane.ERROR_MESSAGE);
        }
        else if(!passMatch){
            JOptionPane.showMessageDialog(frame,
                    "Confirm password does not match password.",
                     "Registration Error",
                 JOptionPane.ERROR_MESSAGE);
        }
        else{
            JOptionPane.showMessageDialog(frame,
                    "Password successfully changed and account unlocked.",
                     "Change Password Successful",
                 JOptionPane.INFORMATION_MESSAGE);
            String password = frame.main.hashPassword(String.valueOf(passwordFld.getPassword()));
            frame.main.sqlite.updateUserPassword(usernameFld.getText(), password);
            frame.main.sqlite.updateUser(usernameFld.getText(), "locked", 0);
            frame.main.sqlite.updateUser(usernameFld.getText(), "attempts", 0);
            usernameFld.setText("");
            passwordFld.setText("");
            confpassFld.setText("");
            errorMsg1.setText("");
            errorMsg2.setText("");
            frame.loginNav();
        }
    }//GEN-LAST:event_changePassBtnActionPerformed

    private void usernameFldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameFldKeyReleased

    }//GEN-LAST:event_usernameFldKeyReleased

    private void confpassFldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confpassFldKeyReleased
        String password = String.valueOf(passwordFld.getPassword());
        String confpass = String.valueOf(confpassFld.getPassword());
        
        if(password.equals(confpass)){
            errorMsg2.setText("Password match.");
            errorMsg2.setForeground(new java.awt.Color(28, 184, 0));
        }
        else{
            errorMsg2.setText("Password does not match.");
            errorMsg2.setForeground(new java.awt.Color(255, 0, 0));
        }
    }//GEN-LAST:event_confpassFldKeyReleased

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        usernameFld.setText("");
        passwordFld.setText("");
        confpassFld.setText("");
        errorMsg1.setText("");
        errorMsg2.setText("");
        frame.forgotPassNav();
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton changePassBtn;
    private javax.swing.JPasswordField confpassFld;
    private javax.swing.JLabel errorMsg1;
    private javax.swing.JLabel errorMsg2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField passwordFld;
    public javax.swing.JTextField usernameFld;
    // End of variables declaration//GEN-END:variables
}
